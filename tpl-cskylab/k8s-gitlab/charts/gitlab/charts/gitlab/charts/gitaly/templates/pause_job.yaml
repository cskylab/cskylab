{{- if and .Values.global.gitaly.enabled .Values.global.operator.rollout.autoPause .Values.global.operator.enabled }}
{{- $imageCfg := dict "global" .Values.global.image "local" .Values.global.kubectl.image -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "fullname" . }}-pause
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
    {{- include "gitlab.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "fullname" . }}-pause
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
    {{- include "gitlab.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["get", "list", "create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "fullname" . }}-pause
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
    {{- include "gitlab.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "fullname" . }}-pause
subjects:
  - kind: ServiceAccount
    name: {{ template "fullname" . }}-pause
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}-pause
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "gitlab.standardLabels" . | nindent 4 }}
    {{- include "gitlab.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "fullname" . }}-pause-runner
      labels:
        {{- include "gitlab.standardLabels" . | nindent 8 }}
        {{- include "gitlab.commonLabels" . | nindent 8 }}
        {{- include "gitlab.podLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      securityContext:
        runAsUser: {{ .Values.global.kubectl.securityContext.runAsUser }}
        fsGroup: {{ .Values.global.kubectl.securityContext.fsGroup }}
      serviceAccountName: {{ template "fullname" . }}-pause
      {{- include "gitlab.image.pullSecrets" $imageCfg | indent 6 }}
      {{- include "gitlab.nodeSelector" . | nindent 6 }}
      containers:
      - name: pause-task
        image: {{ include "gitlab.kubectl.image" . | quote }}
        {{- include "gitlab.image.pullPolicy" $imageCfg | indent 8 }}
        command:
        - "sh"
        - "-c"
        - |
          {{- if .Values.global.praefect.enabled -}}
          {{ range .Values.global.praefect.virtualStorages }}
          echo Number of Gitaly replicas for storage {{ .name }} is {{ default (include "gitlab.gitaly.replicas" $) .gitalyReplicas }};
          kubectl patch statefulset {{include "gitlab.praefect.gitaly.serviceName" (dict "context" $ "name" .name) }} -p '{"spec": {"updateStrategy": {"rollingUpdate": {"partition": {{default (include "gitlab.gitaly.replicas" $) .gitalyReplicas }}} } } }';
          {{- end }}
          {{- else }}
          echo Number of Gitaly replicas is {{include "gitlab.gitaly.replicas" . }};
          kubectl patch statefulset {{include "fullname" . }} -p '{"spec": {"updateStrategy": {"rollingUpdate": {"partition": {{include "gitlab.gitaly.replicas" . }}} } } }'
          {{- end }}
{{- end }}
