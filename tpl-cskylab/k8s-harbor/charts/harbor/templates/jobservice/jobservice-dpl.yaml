apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "harbor.jobservice" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: jobservice
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.jobservice.replicas }}
  {{- if .Values.jobservice.updateStrategy }}
  strategy: {{- toYaml .Values.jobservice.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: jobservice
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.jobservice.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.podLabels "context" $) | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: jobservice
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/jobservice/jobservice-cm.yaml") . | sha256sum }}
        checksum/configmap-env: {{ include (print $.Template.BasePath "/jobservice/jobservice-cm-envvars.yaml") . | sha256sum }}
        checksum/secret-env: {{ include (print $.Template.BasePath "/jobservice/jobservice-secret-envvars.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/jobservice/jobservice-secrets.yaml") . | sha256sum }}
        checksum/secret-core: {{ include (print $.Template.BasePath "/core/core-secret.yaml") . | sha256sum }}
        {{- if and .Values.internalTLS.enabled (not .Values.core.tls.existingSecret) }}
        checksum/tls: {{ include (print $.Template.BasePath "/internal/internal-crt-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.jobservice.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "harbor.imagePullSecrets" . | nindent 6 }}
      automountServiceAccountToken: {{ .Values.jobservice.automountServiceAccountToken }}
      {{- if .Values.jobservice.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.affinity "context" $) | nindent 8 }}
      {{- else }}
      priorityClassName: {{ .Values.jobservice.priorityClassName | quote }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.jobservice.podAffinityPreset "component" "jobservice" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.jobservice.podAntiAffinityPreset "component" "jobservice" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.jobservice.nodeAffinityPreset.type "key" .Values.jobservice.nodeAffinityPreset.key "values" .Values.jobservice.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.jobservice.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.jobservice.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- include "common.tplvalues.render" (dict "value" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
      {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "harbor.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - sh
            - -c
            - |
              mkdir -p "/var/log/jobs"
              chown -R "{{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}" "/var/log/jobs"
          securityContext:
            runAsUser: 0
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: job-logs
              mountPath: /var/log/jobs
              subPath: {{ .Values.persistence.persistentVolumeClaim.jobservice.subPath }}
      {{- end }}
      {{- if .Values.jobservice.initContainers }}
      {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.initContainers "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.jobservice.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: jobservice
          image: {{ include "harbor.jobserviceImage" . }}
          imagePullPolicy: {{ .Values.jobserviceImage.pullPolicy | quote }}
          {{- if .Values.jobservice.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.containerSecurityContext }}
          securityContext: {{- include "common.tplvalues.render" (dict "value" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.jobservice.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.jobservice.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/v1/stats
              port: http
              scheme: {{ include "harbor.component.scheme" . | upper }}
            initialDelaySeconds: {{ .Values.jobservice.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.jobservice.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.jobservice.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.jobservice.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.jobservice.livenessProbe.failureThreshold }}
          {{- else if .Values.jobservice.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.jobservice.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/v1/stats
              port: http
              scheme: {{ include "harbor.component.scheme" . | upper }}
            initialDelaySeconds: {{ .Values.jobservice.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.jobservice.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.jobservice.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.jobservice.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.jobservice.readinessProbe.failureThreshold }}
          {{- else if .Values.jobservice.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.jobservice.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.jobservice.resources }}
          resources: {{- toYaml .Values.jobservice.resources | nindent 12 }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.jobserviceImage.debug | quote }}
            - name: CORE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "harbor.core" . }}
                  key: secret
            - name: JOBSERVICE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "harbor.jobservice" . }}
                  key: secret
            {{- if .Values.internalTLS.enabled }}
            - name: INTERNAL_TLS_ENABLED
              value: "true"
            - name: INTERNAL_TLS_KEY_PATH
              value: /etc/harbor/ssl/jobservice/tls.key
            - name: INTERNAL_TLS_CERT_PATH
              value: /etc/harbor/ssl/jobservice/tls.crt
            - name: INTERNAL_TLS_TRUST_CA_PATH
              value: /etc/harbor/ssl/jobservice/ca.crt
            {{- end }}
            {{- if .Values.jobservice.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "harbor.jobservice" . }}-envvars
            - secretRef:
                name: {{ template "harbor.jobservice" . }}-envvars
            {{- if .Values.jobservice.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.jobservice.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.jobservice.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.jobservice.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - containerPort: {{ include "harbor.jobservice.containerPort" . }}
              name: http
          volumeMounts:
            - name: jobservice-config
              mountPath: /etc/jobservice/config.yml
              subPath: config.yml
            - name: job-logs
              mountPath: /var/log/jobs
              subPath: {{ .Values.persistence.persistentVolumeClaim.jobservice.subPath }}
            {{- if .Values.internalTLS.enabled }}
            - name: internal-tls-certs
              mountPath: /etc/harbor/ssl/jobservice
            {{- end }}
            {{- if .Values.caBundleSecretName }}
{{ include "harbor.caBundleVolumeMount" . | indent 12 }}
            {{- end }}
            {{- if .Values.jobservice.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.jobservice.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: jobservice-config
          configMap:
            name: {{ include "harbor.jobservice" . }}
        - name: job-logs
          {{- if and .Values.persistence.enabled (eq .Values.jobservice.jobLogger "file") }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.persistentVolumeClaim.jobservice.existingClaim | default (include "harbor.jobservice" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.caBundleSecretName }}
{{ include "harbor.caBundleVolume" . | indent 8 }}
        {{- end }}
        {{- if .Values.internalTLS.enabled }}
        - name: internal-tls-certs
          secret:
            secretName: {{ include "harbor.jobservice.tls.secretName" . }}
        {{- end }}
      {{- if .Values.jobservice.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.jobservice.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
