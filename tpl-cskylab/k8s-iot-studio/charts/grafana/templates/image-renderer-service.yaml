{{- if .Values.imageRenderer.enabled  }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-image-renderer
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: image-renderer
  {{- if and .Values.imageRenderer.metrics.enabled .Values.imageRenderer.metrics.annotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.imageRenderer.metrics.annotations "context" $) | nindent 4 }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  type: ClusterIP
  {{- if and (eq .Values.imageRenderer.service.type "LoadBalancer") .Values.imageRenderer.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.imageRenderer.service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .Values.imageRenderer.service.type "LoadBalancer") .Values.imageRenderer.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges: {{ toYaml .Values.imageRenderer.service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
  {{- if and (eq .Values.imageRenderer.service.type "ClusterIP") .Values.imageRenderer.service.clusterIP }}
  clusterIP: {{ .Values.imageRenderer.service.clusterIP }}
  {{- end }}
  {{- if (or (eq .Values.imageRenderer.service.type "LoadBalancer") (eq .Values.imageRenderer.service.type "NodePort")) }}
  externalTrafficPolicy: {{ .Values.imageRenderer.service.externalTrafficPolicy | quote }}
  {{- end }}
  ports:
    - port: {{ .Values.imageRenderer.service.ports.imageRenderer }}
      targetPort: http
      protocol: TCP
      name: http
      {{- if and (or (eq .Values.imageRenderer.service.type "NodePort") (eq .Values.imageRenderer.service.type "LoadBalancer")) (not (empty .Values.imageRenderer.service.nodePorts.grafana)) }}
      nodePort: {{ .Values.imageRenderer.service.nodePorts.grafana }}
      {{- else if eq .Values.imageRenderer.service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
    {{- if .Values.imageRenderer.service.extraPorts }}
    {{- include "common.tplvalues.render" (dict "value" .Values.imageRenderer.service.extraPorts "context" $) | nindent 4 }}
    {{- end }}
  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: image-renderer
{{- end }}
